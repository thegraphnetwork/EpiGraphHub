version: '3.4'

services:
  epigraphhub-base:
    image: epigraphhub/superset-base
    env_file:
      - ../.env
    profiles:
      - donotstart
    build:
      context: ..
      dockerfile: docker/superset/Dockerfile.base
      args:
        # note: if you want to use a specific UID and GID, ensure to add it to
        #       the .env file
        - UID=${UID:-1000}
        - GID=${GID:-1000}

  epigraphhub-superset:
    image: epigraphhub/superset
    build:
      context: ..
      dockerfile: docker/superset/Dockerfile.superset
      args:
        # note: if you want to use a specific UID and GID, ensure to add it to
        #       the .env file
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    env_file:
      - ../.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SUPERSET_PORT}/health"]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 40s  # requires docker-compose 3.4
    volumes:
      - ..:/opt/EpiGraphHub
    network_mode: host

  epigraphhub-redis:
    hostname: epigraphhub-redis
    image: redis:alpine
    environment:
      DISABLE_COMMANDS: "FLUSHDB,FLUSHALL,CONFIG"
      ALLOW_EMPTY_PASSWORD: "no"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 30s  # requires docker-compose 3.4
    ports:
      - ${REDIS_PORT}:6379
    command: redis-server

  epigraphhub-celery:
    image: epigraphhub-celery
    build:
      context: ..
      dockerfile: docker/celery/Dockerfile
    depends_on:
      - epigraphhub-redis
    env_file:
      - ../.env
    volumes:
      - ..:/opt/EpiGraphHub

  epigraphhub-db:
    hostname: epigraphhub-db
    build:
      context: ..
      dockerfile: docker/postgresql/Dockerfile
    env_file:
      - ../.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${FLOWER_PORT}/healthcheck"]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 40s  # requires docker-compose 3.4

  epigraphhub-flower:
    image: mher/flower:0.9.7
    env_file:
      - ../.env
    depends_on:
      - epigraphhub-redis
    command: [
      "flower",
      "--broker=redis://redis:${REDIS_PORT}/0",
      "--port=8888",
      "--basic_auth=admin:${FLOWER_PASSWORD}"
    ]
    ports:
      - ${FLOWER_PORT}:8888
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--spider", "http://localhost:8888/healthcheck"]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 40s  # requires docker-compose 3.4
