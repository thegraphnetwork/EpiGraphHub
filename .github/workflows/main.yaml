name: EpiGraphHub

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  FLOWER_PORT: 28888
  FLOWER_PASSWORD: flowerpass
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 25432
  POSTGRES_USER: dev_epigraph
  POSTGRES_PASSWORD: dev_epigraph
  POSTGRES_DB: dev_epigraphhub
  POSTGRES_DB_PRIVATE: dev_privatehub
  POSTGRES_DB_SANDBOX: dev_sandbox
  REDIS_HOST: epigraphhub-redis
  REDIS_PORT: 6379
  REDIS_PASSWORD: redispass
  SUPERSET_PORT: 8088
  ENV: dev
  SUPERSET_SECRET_KEY: superset-on-ci

jobs:
  main:

    runs-on: ubuntu-latest
    timeout-minutes: 35
    defaults:
      run:
        shell: bash -l {0}
    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true

    steps:
    - uses: actions/checkout@v2

    - name: Create environment variables file
      run: |
        envsubst < .env.tpl > .env

    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        mamba-version: "*"
        environment-file: conda/base.yaml
        channels: conda-forge,r,nodefaults
        activate-environment: epigraphhub
        use-mamba: true
        miniforge-variant: Mambaforge

    - name: build and start docker containers
      run: |
        make docker-build
        make docker-start SERVICES=epigraphhub-superset

    - name: wait for the services are properly working
      run: |
        docker ps
        ./docker/healthcheck.sh epigraphhub-db
        ./docker/healthcheck.sh epigraphhub-redis
        # ./docker/healthcheck.sh epigraphhub-celery
        ./docker/healthcheck.sh epigraphhub-flower
        ./docker/healthcheck.sh epigraphhub-superset

    - name: prepare database
      run: make docker-dev-prepare-db

    - name: test cron scripts
      run: |
        make docker-run-cron SERVICE=epigraphhub-superset

    - name: Deploy
      if: ${{ github.event_name == 'push' }}
      env:
        ANSIBLE_VAULT_KEY: ${{ secrets.ANSIBLE_VAULT_KEY }}
      run: |
        echo "${ANSIBLE_VAULT_KEY}" > .vault_pass.txt
        make deploy
