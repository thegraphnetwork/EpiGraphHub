name: EpiGraphHub

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ENV: dev
  FLOWER_PORT: 28888
  FLOWER_PASSWORD: flowerpass
  POSTGRES_HOST: postgres
  POSTGRES_PORT: 25432
  POSTGRES_USER: dev_epigraph
  POSTGRES_PASSWORD: dev_epigraph
  POSTGRES_DB: dev_epigraphhub
  POSTGRES_DB_PRIVATE: dev_privatehub
  POSTGRES_DB_SANDBOX: dev_sandbox
  REDIS_HOST: redis
  REDIS_PORT: 6379
  REDIS_PASSWORD: redispass
  SUPERSET_PORT: 8088
  SUPERSET_DB_PATH_DIR_HOST: /tmp/superset
  SUPERSET_DB_PATH_HOST: /tmp/superset/superset.db
  SUPERSET_HOME: /opt/data/superset
  SUPERSET_MAIL_DEFAULT_SENDER:
  SUPERSET_MAIL_PASSWORD:
  SUPERSET_MAIL_PORT: 587
  SUPERSET_MAIL_SERVER:
  SUPERSET_MAIL_USERNAME:
  SUPERSET_MAIL_USE_TLS: true
  SUPERSET_SECRET_KEY: superset-on-ci

jobs:
  main:

    runs-on: ubuntu-latest
    timeout-minutes: 35
    defaults:
      run:
        shell: bash -l {0}
    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true

    steps:
    - uses: actions/checkout@v2

    - name: setup
      run: make prepare-host-db

    - name: Create environment variables file
      run: |
        envsubst < .env.tpl > .env

    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        mamba-version: "*"
        environment-file: conda/base.yaml
        channels: conda-forge,r,nodefaults
        activate-environment: epigraphhub
        use-mamba: true
        miniforge-variant: Mambaforge

    - name: build and start docker containers
      run: |
        make docker-build
        make docker-start SERVICES=superset

    - name: wait for the services are properly working
      run: |
        docker ps
        make docker-wait-all

    - name: prepare database
      run: make docker-dev-prepare-db

    - name: test cron scripts
      run: |
        make docker-run-cron SERVICE=superset

    - name: Generate logs
      if: ${{ failure() }}
      run: |
        make docker-logs SERVICES= > /tmp/docker-services.log

    - name: Archive log artifacts
      uses: actions/upload-artifact@v3
      if: ${{ failure() }}
      with:
        name: docker-services
        path: /tmp/docker-services.log
